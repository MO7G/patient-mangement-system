version: "3.9"

services:
  patient-service-db:
    image: postgres:15
    container_name: patient-service-db
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5000:5432"
    volumes:
      - /home/yohajji/working/docker_related/db_volumes:/var/lib/postgresql/data
    networks:
      - internal

  patient-service:
    build: ./patientService
    image: patient-service:latest
    container_name: patient-service
    ports:
      - "4000:4000"
    depends_on:
      - patient-service-db
      - kafka
    networks:
      - internal
    environment:
      # this will map to spring.datasource.url=jdbc:postgresql://patient-service-db:5432/db in the application.properties
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      BILLING_SERVICE_ADDRESS: billing-service   # ðŸ‘ˆ service name
      BILLING_SERVICE_GRPC_PORT: 9001           # ðŸ‘ˆ gRPC port
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092



  billing-service:
    build: ./billing-service     # ðŸ‘ˆ path to your Dockerfile
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "4001:4001"   # Spring Boot HTTP
      - "9001:9001"   # gRPC
    networks:
      - internal


  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"   # internal (Docker services use kafka:9092)
      - "9094:9094"   # external (host apps use localhost:9094)
    networks:
      - internal
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - internal


networks:
  internal:
    driver: bridge
